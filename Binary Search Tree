The Binary Search tree is the type of tree in which the left subtree is smaller than the root value and the right subtree is greater than the root value;
It is created using by the singley linked list;
Now the code to implement it on the compiler

              #include <bits/stdc++.h>

              using namespace std;

              class node{
                  public:
                  int data;
                  node* right;
                  node* left;
                  node(int d){
                      this->data=d;
                      this->left=NULL;
                      this->right=NULL;
                  }
              };
              node* insert(node* &root,int val){
                  if(root==NULL){
                      root = new node(val);
                     return root;
                  }
                  else if(val<root->data){
                      root->left=insert(root->left,val);
                  }
                  else if(val>root->data){
                      root->right=insert(root->right,val);
                  }
                  return root;
              }
              void print(node* root){
                  if(root==NULL){
                      return;
                  }
                  cout<<root->data<<" ";
                  print(root->left);
                  print(root->right);
              }
              int main()
              {
                  node* root=NULL;
                  root=insert(root,45);
                 root=insert(root,4);
                 root=insert(root,65);
                 root=insert(root,40);
                 root=insert(root,450);

                  print(root);

                  return 0;
              }
